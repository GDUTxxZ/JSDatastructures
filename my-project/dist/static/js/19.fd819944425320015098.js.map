{"version":3,"sources":["webpack:///static/js/19.fd819944425320015098.js","webpack:///./src/pages/Graph/ALGraph.vue?184b","webpack:///ALGraph.vue","webpack:///./src/pages/Graph/ALGraph.vue","webpack:///./src/pages/Graph/ALGraph.vue?5a12","webpack:///./src/pages/Graph/ALGraph.vue?4726"],"names":["webpackJsonp","104","module","exports","__webpack_require__","content","i","locals","131","__webpack_exports__","AdjVexNode","adjvex","info","arguments","length","undefined","nextArc","this","VexNode","data","firstArc","ALGraph","vexs","kind","e","arc","Object","defineProperty","value","prototype","locateVex_M","putVex_M","pos","getVex_M","firstAdjVex_M","addArc_M","pos1","pos2","parseInt","posAdj","removeArc_M","DFSTraverse_M","callback","DFSTraverse","tag","adjNode","bind","Array","BFSTraverse_M","list","push","shift","kruskal","MFSetNode","key","parent","MFSet","nodes","nodeNum","_this","setRoot","search","insert","find","node","nodePos","nodeList","diff","union","newAlGraph","nodeMFSet","closedge","j","_j","unshift","every","item","sort","a","b","console","log","dijkstra","dist","lowcost","prev","min","k","_j2","_j3","toplogicalSort","toplogical","nodeDegree","_i","_arc","_i2","_j4","_arc2","criticalPath","ve","vl","A","_i3","_arc3","_i4","_j5","_arc4","_i5","_j6","_i6","_arc5","_i7","ae","al","_arc6","v1","v2","le","algraph","vexsNumber","graphKind","pos3","result","methods","paintALGraph","canvas","document","getElementById","cxt","getContext","width","height","scale","translate","num","angle","Math","PI","moveTo","sin","cos","fillStyle","strokeStyle","beginPath","closePath","stroke","font","textAlign","fillText","_i8","_arc7","_j7","x1","y1","x2","y2","text","arcAngle","atan2","round","leftLineAngle","rightLineAngle","lineTo","fill","_i9","_i10","_arc8","_j8","createALGraph","val","slice","map","join","21","Component","52","version","sources","names","mappings","file","sourcesContent","sourceRoot","79","render","_vm","_h","$createElement","_c","_self","attrs","id","_v","_m","staticClass","_s","directives","name","rawName","expression","type","placeholder","domProps","on","input","$event","target","composing","click","stopPropagation","preventDefault","staticRenderFns"],"mappings":"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","file":"static/js/19.fd819944425320015098.js","sourcesContent":["webpackJsonp([19],{\n\n/***/ 104:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(52);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(16)(\"1e32fafe\", content, true);\n\n/***/ }),\n\n/***/ 131:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\nfunction AdjVexNode(adjvex) {\n  var info = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var nextArc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  this.adjvex = adjvex;\n  this.info = info;\n  this.nextArc = nextArc;\n}\nfunction VexNode(data) {\n  var firstArc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  this.data = data;\n  this.firstArc = firstArc;\n}\nfunction ALGraph() {\n  var vexs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'DG';\n\n  this.vexs = vexs;\n  this.kind = kind;\n  this.e = 0;\n  for (var i = vexs.length - 1; i >= 0; i--) {\n    var arc = vexs[i].firstArc;\n    while (arc !== null) {\n      this.e++;\n      arc = arc.nextArc;\n    }\n  }\n  this.e /= 2;\n}\nALGraph.prototype.locateVex_M = function (data) {\n  for (var i = this.vexs.length - 1; i >= 0; i--) {\n    if (this.vexs[i].data === data) {\n      return i;\n    }\n  }\n  return false;\n};\nALGraph.prototype.putVex_M = function (pos, data) {\n  if (pos >= this.vexs.length) {\n    return false;\n  } else {\n    this.vexs[pos].data = data;\n    return true;\n  }\n};\nALGraph.prototype.getVex_M = function (pos) {\n  if (pos >= this.vexs.length) {\n    return false;\n  } else {\n    return this.vexs[pos].data;\n  }\n};\nALGraph.prototype.firstAdjVex_M = function (pos) {\n  if (pos >= this.vexs.length) {\n    return false;\n  } else {\n    return this.vexs[pos].firstArc;\n  }\n};\nALGraph.prototype.addArc_M = function (pos1, pos2) {\n  var info = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (pos1 >= this.vexs.length || pos2 >= this.vexs.length || pos1 === pos2) {\n    return false;\n  }\n  if (this.kind !== 'DN' && this.kind !== 'UDN') {\n    info = true;\n  } else {\n    info = parseInt(info);\n  }\n  var posAdj = this.firstAdjVex_M(pos1);\n  if (posAdj === null) {\n    this.vexs[pos1].firstArc = new AdjVexNode(pos2, info);\n  } else {\n    while (posAdj.nextArc !== null) {\n      if (posAdj.adjvex === pos2) {\n        return false;\n      }\n      posAdj = posAdj.nextArc;\n    }\n    posAdj.nextArc = new AdjVexNode(pos2, info);\n  }\n  this.e++;\n  if (this.kind === 'UDN' || this.kind === 'UDG') {\n    posAdj = this.firstAdjVex_M(pos2);\n    if (posAdj === null) {\n      this.vexs[pos2].firstArc = new AdjVexNode(pos1, info);\n    } else {\n      while (posAdj.nextArc !== null) {\n        if (posAdj.adjvex === pos1) {\n          return false;\n        }\n        posAdj = posAdj.nextArc;\n      }\n      posAdj.nextArc = new AdjVexNode(pos1, info);\n    }\n  }\n  return true;\n};\nALGraph.prototype.removeArc_M = function (pos1, pos2) {\n  if (pos1 >= this.vexs.length || pos2 >= this.vexs.length) {\n    return false;\n  }\n  var posAdj = this.firstAdjVex_M(pos1);\n  if (posAdj === null) {\n    return false;\n  }\n  if (posAdj.adjvex === pos2) {\n    this.vexs[pos1].firstArc = posAdj.nextArc;\n  } else {\n    while (posAdj.nextArc !== null && posAdj.nextArc.adjvex !== pos2) {\n      posAdj = posAdj.nextArc;\n    }\n    if (posAdj.nextArc !== null && posAdj.nextArc.adjvex === pos2) {\n      posAdj.nextArc = posAdj.nextArc.nextArc;\n    } else {\n      return false;\n    }\n  }\n  this.e--;\n  if (this.kind === 'UDN' || this.kind === 'UDG') {\n    posAdj = this.firstAdjVex_M(pos2);\n    if (posAdj === null) {\n      return false;\n    }\n    if (posAdj.adjvex === pos1) {\n      this.vexs[pos2].firstArc = posAdj.nextArc;\n    } else {\n      while (posAdj.nextArc !== null && posAdj.nextArc.adjvex !== pos1) {\n        posAdj = posAdj.nextArc;\n      }\n      if (posAdj.nextArc !== null && posAdj.nextArc.adjvex === pos1) {\n        posAdj.nextArc = posAdj.nextArc.nextArc;\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nALGraph.prototype.DFSTraverse_M = function (callback) {\n  var tag = new Array(this.vexs.length);\n  for (var pos = 0; pos < this.vexs.length; pos++) {\n    if (tag[pos] === undefined) {\n      DFSTraverse.bind(this)(pos);\n    }\n  }\n  function DFSTraverse(pos) {\n    if (tag[pos]) {\n      return;\n    }\n    callback(this.vexs[pos].data);\n    tag[pos] = true;\n    var adjNode = this.firstAdjVex_M(pos);\n    while (adjNode !== null) {\n      DFSTraverse.bind(this)(adjNode.adjvex);\n      tag[adjNode.adjvex] = true;\n      adjNode = adjNode.nextArc;\n    }\n  }\n};\nALGraph.prototype.BFSTraverse_M = function (callback) {\n  var tag = new Array(this.vexs.length);\n  var list = [];\n  for (var pos = 0; pos < this.vexs.length; pos++) {\n    if (tag[pos] === undefined) {\n      list.push(pos);\n      tag[pos] = true;\n    }\n    var i = list.shift();\n    while (i !== undefined) {\n      callback(this.vexs[i].data);\n      var adjNode = this.firstAdjVex_M(i);\n      while (adjNode !== null) {\n        if (tag[adjNode.adjvex] === undefined) {\n          list.push(adjNode.adjvex);\n          tag[adjNode.adjvex] = true;\n        }\n        adjNode = adjNode.nextArc;\n      }\n      i = list.shift();\n    }\n  }\n};\nALGraph.prototype.kruskal = function () {\n  var _this = this;\n\n  function MFSetNode(key) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    this.key = key;\n    this.parent = parent;\n  }\n  function MFSet() {\n    this.nodes = [];\n    this.nodeNum = 0;\n  }\n  MFSet.prototype.setRoot = function (key) {\n    if (this.search(key)) {\n      return false;\n    } else {\n      this.nodes.push(new MFSetNode(key));\n      this.nodeNum++;\n      return true;\n    }\n  };\n  MFSet.prototype.insert = function (key, pos) {\n    if (this.search(key) || pos > this.nodeNum - 1) {\n      return false;\n    } else {\n      this.nodes.push(new MFSetNode(key, pos));\n      this.nodeNum++;\n      return true;\n    }\n  };\n  MFSet.prototype.search = function (key) {\n    for (var i = this.nodeNum - 1; i >= 0; i--) {\n      if (this.nodes[i].key === key) {\n        return i;\n      }\n    }\n    return false;\n  };\n  MFSet.prototype.find = function (pos) {\n    if (pos > this.nodeNum) {\n      return false;\n    } else {\n      var node = this.nodes[pos];\n      var nodePos = pos;\n      var nodeList = [];\n      while (node.parent !== null) {\n        nodeList.push(node);\n        nodePos = node.parent;\n        node = this.nodes[nodePos];\n      }\n      if (nodeList.length > 0) {\n        for (var i = nodeList.length - 1; i >= 0; i--) {\n          nodeList[i].parent = nodePos;\n        }\n      }\n      return node;\n    }\n  };\n  MFSet.prototype.diff = function (pos1, pos2) {\n    if (pos1 > this.nodeNum || pos2 > this.nodeNum || this.find(pos1) !== this.find(pos2)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  MFSet.prototype.union = function (pos1, pos2) {\n    if (pos1 > this.nodeNum || pos2 > this.nodeNum || this.diff(pos1, pos2)) {\n      return false;\n    } else {\n      this.find(pos1).parent = pos2;\n    }\n  };\n  var newAlGraph = new ALGraph([], 'UDN');\n  var nodeMFSet = new MFSet();\n  var closedge = [];\n  var _loop = function _loop(i, _j) {\n    newAlGraph.vexs.unshift(new VexNode(_this.vexs[i].data));\n    nodeMFSet.setRoot(_j++);\n    var arc = _this.firstAdjVex_M(i);\n    while (arc !== null) {\n      if (closedge.every(function (item) {\n        if (item.i !== arc.adjvex || item.j !== i) {\n          return true;\n        } else {\n          return false;\n        }\n      })) {\n        closedge.push({\n          i: i,\n          j: arc.adjvex,\n          info: arc.info\n        });\n      }\n      arc = arc.nextArc;\n    }\n    j = _j;\n  };\n\n  for (var i = this.vexs.length - 1, j = 0; i >= 0; i--) {\n    _loop(i, j);\n  }\n  closedge.sort(function (a, b) {\n    return b.info - a.info;\n  });\n  for (var i = this.e - 1; i >= 0; i--) {\n    console.log(nodeMFSet);\n    console.log('pos1: ' + closedge[i].i);\n    console.log('pos2: ' + closedge[i].j);\n    if (!nodeMFSet.diff(closedge[i].i, closedge[i].j)) {\n      console.log('找到可加入的边');\n      console.log(newAlGraph.addArc_M(closedge[i].i, closedge[i].j, closedge[i].info));\n      nodeMFSet.union(closedge[i].i, closedge[i].j);\n    }\n  }\n  return newAlGraph;\n};\nALGraph.prototype.dijkstra = function (pos) {\n  var dist = new Array(this.vexs.length);\n  var tag = new Array(this.vexs.length);\n  dist[pos] = {\n    lowcost: 0,\n    prev: null\n  };\n  var arc = this.vexs[pos].firstArc;\n  while (arc !== null) {\n    dist[arc.adjvex] = {\n      lowcost: arc.info,\n      prev: pos\n    };\n    arc = arc.nextArc;\n  }\n  tag[pos] = true;\n  for (var i = this.vexs.length - 2; i >= 0; i--) {\n    var min = null;\n    var k = null;\n    for (var _j2 = this.vexs.length - 1; _j2 >= 0; _j2--) {\n      if (dist[_j2] !== undefined && tag[_j2] === undefined && (min === null || min > dist[_j2].lowcost)) {\n        min = dist[_j2].lowcost;\n        k = _j2;\n      }\n    }\n    if (k !== null) {\n      tag[k] = true;\n      arc = this.vexs[k].firstArc;\n      while (arc !== null) {\n        var _j3 = arc.adjvex;\n        if (tag[_j3] === undefined && (dist[_j3] === undefined || dist[k].lowcost + arc.info < dist[_j3].lowcost)) {\n          dist[_j3] = {\n            lowcost: dist[k].lowcost + arc.info,\n            prev: k\n          };\n        }\n        arc = arc.nextArc;\n      }\n    }\n  }\n  return dist;\n};\nALGraph.prototype.toplogicalSort = function () {\n  if (this.kind !== 'DG' && this.kind !== 'DN') {\n    return false;\n  }\n  var toplogical = [];\n  var nodeDegree = [];\n  for (var i = this.vexs.length - 1; i >= 0; i--) {\n    nodeDegree.push(0);\n  }\n  for (var _i = this.vexs.length - 1; _i >= 0; _i--) {\n    var _arc = this.vexs[_i].firstArc;\n    while (_arc !== null) {\n      nodeDegree[_arc.adjvex]++;\n      _arc = _arc.nextArc;\n    }\n  }\n  for (var _i2 = this.vexs.length - 1; _i2 >= 0; _i2--) {\n    for (var _j4 = this.vexs.length - 1; _j4 >= 0; _j4--) {\n      if (nodeDegree[_j4] === 0) {\n        nodeDegree[_j4]--;\n        toplogical.push({\n          data: this.vexs[_j4].data,\n          pos: _j4\n        });\n        var _arc2 = this.vexs[_j4].firstArc;\n        while (_arc2 !== null) {\n          nodeDegree[_arc2.adjvex]--;\n          _arc2 = _arc2.nextArc;\n        }\n        break;\n      }\n    }\n  }\n  if (toplogical.length !== this.vexs.length) {\n    return false;\n  } else {\n    return toplogical;\n  }\n};\nALGraph.prototype.criticalPath = function () {\n  if (this.kind !== 'DG' && this.kind !== 'DN') {\n    return false;\n  }\n  var toplogical = [];\n  var nodeDegree = [];\n  var ve = [];\n  var vl = [];\n  var A = [];\n  for (var i = this.vexs.length - 1; i >= 0; i--) {\n    nodeDegree.push(0);\n    ve.push(0);\n  }\n  for (var _i3 = this.vexs.length - 1; _i3 >= 0; _i3--) {\n    var _arc3 = this.vexs[_i3].firstArc;\n    while (_arc3 !== null) {\n      nodeDegree[_arc3.adjvex]++;\n      _arc3 = _arc3.nextArc;\n    }\n  }\n  for (var _i4 = this.vexs.length - 1; _i4 >= 0; _i4--) {\n    for (var _j5 = this.vexs.length - 1; _j5 >= 0; _j5--) {\n      if (nodeDegree[_j5] === 0) {\n        nodeDegree[_j5]--;\n        toplogical.push({\n          data: this.vexs[_j5].data,\n          pos: _j5\n        });\n        var _arc4 = this.vexs[_j5].firstArc;\n        while (_arc4 !== null) {\n          ve[_arc4.adjvex] = ve[_j5] + _arc4.info > ve[_arc4.adjvex] ? ve[_j5] + _arc4.info : ve[_arc4.adjvex];\n          nodeDegree[_arc4.adjvex]--;\n          _arc4 = _arc4.nextArc;\n        }\n        break;\n      }\n    }\n  }\n  for (var _i5 = this.vexs.length - 1, _j6 = ve[this.vexs.length - 1]; _i5 >= 0; _i5--) {\n    vl.push(_j6);\n  }\n  for (var _i6 = this.vexs.length - 2; _i6 >= 0; _i6--) {\n    var _arc5 = this.vexs[_i6].firstArc;\n    while (_arc5 !== null) {\n      vl[_i6] = ve[_arc5.adjvex] - _arc5.info < vl[_i6] ? ve[_arc5.adjvex] - _arc5.info : vl[_i6];\n      _arc5 = _arc5.nextArc;\n    }\n  }\n  for (var _i7 = this.vexs.length - 1; _i7 >= 0; _i7--) {\n    var ae = void 0;\n    var al = void 0;\n    var _arc6 = this.vexs[_i7].firstArc;\n    while (_arc6 !== null) {\n      ae = ve[_i7];\n      al = vl[_arc6.adjvex] - _arc6.info;\n      if (ae === al) {\n        A.unshift({\n          v1: this.vexs[_i7].data,\n          v2: this.vexs[_arc6.adjvex].data,\n          info: _arc6.info,\n          ae: ae,\n          al: al,\n          le: al - ae\n        });\n      }\n      _arc6 = _arc6.nextArc;\n    }\n  }\n  if (toplogical.length !== this.vexs.length) {\n    return false;\n  } else {\n    return A;\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      algraph: null,\n      vexsNumber: 0,\n      graphKind: 'UDN',\n      pos1: 0,\n      pos2: 0,\n      pos3: 0,\n      info: 0,\n      result: '无'\n    };\n  },\n\n  methods: {\n    paintALGraph: function paintALGraph() {\n      var canvas = document.getElementById('canvas-mgraph');\n      var cxt = canvas.getContext('2d');\n      canvas.width = canvas.width;\n      canvas.height = canvas.height;\n      cxt.scale(0.8, 0.8);\n      cxt.translate(canvas.width * 0.1, canvas.height * 0.1);\n      var data = this.algraph;\n      var num = data.vexs.length;\n      var angle = Math.PI * 2 / num;\n      for (var i = 0; i < num; i++) {\n        cxt.moveTo(canvas.width / 2 * (1 + Math.sin(angle * i)), canvas.height / 2 * (1 + Math.cos(angle * i)));\n        cxt.fillStyle = 'red';\n        cxt.strokeStyle = 'red';\n        cxt.beginPath();\n        cxt.arc(canvas.width / 2 * (1 + Math.sin(angle * i)), canvas.height / 2 * (1 + Math.cos(angle * i)), canvas.width / 15, 0, Math.PI * 2, true);\n        cxt.closePath();\n        cxt.stroke();\n        cxt.font = '30px serif';\n        cxt.textAlign = 'center';\n        cxt.fillText(data.vexs[i].data, canvas.width / 2 * (1 + Math.sin(angle * i)), canvas.height / 2 * (1 + Math.cos(angle * i)));\n      }\n      function drawArrow(x1, y1, x2, y2, text) {\n        var arcAngle = Math.atan2(Math.round(y1 - y2), Math.round(x1 - x2));\n        if (arcAngle >= 0) {\n          cxt.translate(10, 10);\n        } else {\n          cxt.translate(-10, -10);\n        }\n        console.log('x1: ' + Math.round(x2 - x1) + ', y1: ' + Math.round(y2 - y1) + ', arcAngle: ' + arcAngle / Math.PI * 180 + '度');\n        var leftLineAngle = arcAngle + Math.PI / 18;\n        var rightLineAngle = arcAngle - Math.PI / 18;\n        cxt.beginPath();\n        cxt.arc(x2, y2, 30, leftLineAngle, rightLineAngle, true);\n        cxt.lineTo(x2, y2);\n        cxt.fill();\n        cxt.closePath();\n        cxt.moveTo(x1, y1);\n        cxt.lineTo(x2, y2);\n        cxt.stroke();\n        cxt.fillText(text, (x1 + x2) / 2, (y1 + y2) / 2);\n        if (arcAngle >= 0) {\n          cxt.translate(-10, -10);\n        } else {\n          cxt.translate(10, 10);\n        }\n      }\n      if (data.kind === 'DG' || data.kind === 'DN') {\n        for (var _i8 = 0; _i8 < num; _i8++) {\n          for (var _arc7 = data.vexs[_i8].firstArc; _arc7 !== null; _arc7 = _arc7.nextArc) {\n            var _j7 = _arc7.adjvex;\n            drawArrow(canvas.width / 2 * (1 + Math.sin(angle * _i8)), canvas.height / 2 * (1 + Math.cos(angle * _i8)), canvas.width / 2 * (1 + Math.sin(angle * _j7)), canvas.height / 2 * (1 + Math.cos(angle * _j7)), _arc7.info);\n          }\n        }\n      } else {\n        var tag = new Array(num);\n        for (var _i9 = 0; _i9 < num; _i9++) {\n          tag[_i9] = new Array(num);\n        }\n        for (var _i10 = 0; _i10 < num; _i10++) {\n          for (var _arc8 = data.vexs[_i10].firstArc; _arc8 !== null; _arc8 = _arc8.nextArc) {\n            var _j8 = _arc8.adjvex;\n            if (tag[_i10][_j8] !== true) {\n              cxt.moveTo(canvas.width / 2 * (1 + Math.sin(angle * _i10)), canvas.height / 2 * (1 + Math.cos(angle * _i10)));\n              cxt.lineTo(canvas.width / 2 * (1 + Math.sin(angle * _j8)), canvas.height / 2 * (1 + Math.cos(angle * _j8)));\n              cxt.stroke();\n              cxt.fillText(_arc8.info, (canvas.width / 2 * (1 + Math.sin(angle * _i10)) + canvas.width / 2 * (1 + Math.sin(angle * _j8))) / 2, (canvas.height / 2 * (1 + Math.cos(angle * _i10)) + canvas.height / 2 * (1 + Math.cos(angle * _j8))) / 2);\n              tag[_i10][_j8] = true;\n              tag[_j8][_i10] = true;\n            }\n          }\n        }\n      }\n    },\n    createALGraph: function createALGraph() {\n      var vexs = [];\n      for (var i = this.vexsNumber - 1; i >= 0; i--) {\n        vexs.unshift(new VexNode(i));\n      }\n      this.algraph = new ALGraph(vexs, this.graphKind);\n      this.result = '无';\n      this.paintALGraph();\n    },\n    addArc_M: function addArc_M() {\n      this.result = this.algraph.addArc_M(parseInt(this.pos1), parseInt(this.pos2), this.info);\n      this.paintALGraph();\n    },\n    removeArc_M: function removeArc_M() {\n      this.result = this.algraph.removeArc_M(parseInt(this.pos1), parseInt(this.pos2), this.info);\n      this.paintALGraph();\n    },\n    DFSTraverse_M: function DFSTraverse_M() {\n      var result = '';\n      this.algraph.DFSTraverse_M(function (val) {\n        result += val + ',';\n      });\n      this.result = result.slice(0, result.length - 1);\n    },\n    BFSTraverse_M: function BFSTraverse_M() {\n      var result = '';\n      this.algraph.BFSTraverse_M(function (val) {\n        result += val + ',';\n      });\n      this.result = result.slice(0, result.length - 1);\n    },\n    kruskal: function kruskal() {\n      this.algraph = this.algraph.kruskal();\n      this.paintALGraph();\n    },\n    dijkstra: function dijkstra() {\n      var result = this.algraph.dijkstra(parseInt(this.pos3)).map(function (item) {\n        return item.lowcost;\n      });\n      this.result = result;\n    },\n    toplogicalSort: function toplogicalSort() {\n      this.result = this.algraph.toplogicalSort().map(function (item) {\n        return item.pos;\n      }).join(',');\n    },\n    criticalPath: function criticalPath() {\n      this.result = this.algraph.criticalPath().map(function (item) {\n        return item.v1 + ' --> ' + item.v2;\n      }).join(',');\n      console.log(this.algraph.criticalPath());\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 21:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(104)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(131),\n  /* template */\n  __webpack_require__(79),\n  /* scopeId */\n  \"data-v-183e0ec3\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(15)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"#ALGraph[data-v-183e0ec3]{font-size:20px}.show-view[data-v-183e0ec3]{background-color:#adf}.view-item[data-v-183e0ec3]{display:inline-block;width:50px;height:50px;margin:5px;line-height:50px;background-color:#fad}.show-data[data-v-183e0ec3]{background-color:#fda}.operate-data[data-v-183e0ec3]{background-color:#dfa}.operate-data button[data-v-183e0ec3]{font-size:20px;border:none;background-color:#fff;width:140px;height:40px;margin:10px;cursor:pointer}.operate-data input[data-v-183e0ec3]{width:100px;height:37px;padding:0;text-align:center}#MGraph .oprate-data-aux[data-v-183e0ec3]{font-size:15px}.summary[data-v-183e0ec3]{background-color:#afe}.summary pre[data-v-183e0ec3]{text-align:left}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/zxx/Desktop/七行考核/my-project/src/pages/Graph/ALGraph.vue\"],\"names\":[],\"mappings\":\"AACA,0BACE,cAAgB,CACjB,AACD,4BACE,qBAAuB,CACxB,AACD,4BACE,qBAAsB,AACtB,WAAY,AACZ,YAAa,AACb,WAAY,AACZ,iBAAkB,AAClB,qBAAuB,CACxB,AACD,4BACE,qBAAuB,CACxB,AACD,+BACE,qBAAuB,CACxB,AACD,sCACE,eAAgB,AAChB,YAAa,AACb,sBAAwB,AACxB,YAAa,AACb,YAAa,AACb,YAAa,AACb,cAAgB,CACjB,AACD,qCACE,YAAa,AACb,YAAa,AACb,UAAW,AACX,iBAAmB,CACpB,AACD,0CACE,cAAgB,CACjB,AACD,0BACE,qBAAuB,CACxB,AACD,8BACE,eAAiB,CAClB\",\"file\":\"ALGraph.vue\",\"sourcesContent\":[\"\\n#ALGraph[data-v-183e0ec3] {\\r\\n  font-size: 20px;\\n}\\n.show-view[data-v-183e0ec3] {\\r\\n  background-color: #adf;\\n}\\n.view-item[data-v-183e0ec3] {\\r\\n  display: inline-block;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  margin: 5px;\\r\\n  line-height: 50px;\\r\\n  background-color: #fad;\\n}\\n.show-data[data-v-183e0ec3] {\\r\\n  background-color: #fda;\\n}\\n.operate-data[data-v-183e0ec3] {\\r\\n  background-color: #dfa;\\n}\\n.operate-data button[data-v-183e0ec3] {\\r\\n  font-size: 20px;\\r\\n  border: none;\\r\\n  background-color: white;\\r\\n  width: 140px;\\r\\n  height: 40px;\\r\\n  margin: 10px;\\r\\n  cursor: pointer;\\n}\\n.operate-data input[data-v-183e0ec3] {\\r\\n  width: 100px;\\r\\n  height: 37px;\\r\\n  padding: 0;\\r\\n  text-align: center;\\n}\\n#MGraph .oprate-data-aux[data-v-183e0ec3] {\\r\\n  font-size: 15px;\\n}\\n.summary[data-v-183e0ec3] {\\r\\n  background-color: #afe;\\n}\\n.summary pre[data-v-183e0ec3] {\\r\\n  text-align: left;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 79:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"ALGraph\"\n    }\n  }, [_c('h1', [_vm._v(\"邻接数组\")]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _c('div', {\n    staticClass: \"show-data\"\n  }, [_c('h2', [_vm._v(\"结果：\")]), _vm._v(\"\\n    \" + _vm._s(_vm.result) + \"\\n  \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data\"\n  }, [_c('h2', [_vm._v(\"数据操作\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.vexsNumber),\n      expression: \"vexsNumber\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"vexsNumber\",\n      \"placeholder\": \"顶点数\"\n    },\n    domProps: {\n      \"value\": (_vm.vexsNumber)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.vexsNumber = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=顶点数量\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.graphKind),\n      expression: \"graphKind\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"graphKind\",\n      \"placeholder\": \"图的类型\"\n    },\n    domProps: {\n      \"value\": (_vm.graphKind)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.graphKind = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"DG有向图，DN有向带权图，UDG无向图，UDN无向带权图\")]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.createALGraph($event)\n      }\n    }\n  }, [_vm._v(\"生成图\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.pos1),\n      expression: \"pos1\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"pos1\",\n      \"placeholder\": \"位置1\"\n    },\n    domProps: {\n      \"value\": (_vm.pos1)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.pos1 = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=位置1\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.pos2),\n      expression: \"pos2\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"pos2\",\n      \"placeholder\": \"位置2\"\n    },\n    domProps: {\n      \"value\": (_vm.pos2)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.pos2 = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=位置2\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.info),\n      expression: \"info\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"info\",\n      \"placeholder\": \"权值\"\n    },\n    domProps: {\n      \"value\": (_vm.info)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.info = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=赋权\")]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.addArc_M($event)\n      }\n    }\n  }, [_vm._v(\"增加边\")]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.removeArc_M($event)\n      }\n    }\n  }, [_vm._v(\"删除边\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.DFSTraverse_M($event)\n      }\n    }\n  }, [_vm._v(\"深度优先遍历\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.BFSTraverse_M($event)\n      }\n    }\n  }, [_vm._v(\"广度优先遍历\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.kruskal($event)\n      }\n    }\n  }, [_vm._v(\"克鲁斯卡尔算法\")]), _vm._v(\"(无向连通带权图)\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.toplogicalSort($event)\n      }\n    }\n  }, [_vm._v(\"拓补排序\")]), _vm._v(\"(有向图)\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.criticalPath($event)\n      }\n    }\n  }, [_vm._v(\"关键路径\")]), _vm._v(\"(有向带权图)\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.pos3),\n      expression: \"pos3\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"pos3\",\n      \"placeholder\": \"生成树的起点\"\n    },\n    domProps: {\n      \"value\": (_vm.pos3)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.pos3 = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=起点（序号）\")]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.dijkstra($event)\n      }\n    }\n  }, [_vm._v(\"迪杰斯特拉算法\")])])]), _vm._v(\" \"), _vm._m(1)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"show-view\"\n  }, [_c('h2', [_vm._v(\"数据展示\")]), _vm._v(\" \"), _c('canvas', {\n    attrs: {\n      \"width\": \"500\",\n      \"height\": \"500\",\n      \"id\": \"canvas-mgraph\"\n    }\n  })])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"summary\"\n  }, [_c('h2', [_vm._v(\"总结：图——邻接数组\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"邻接指针:\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n      {\\n        adjvex: Number // 邻接顶点在定点数组中的序号\\n        info: Number // 权值\\n        nextArc: Obeject // 指向下一个邻接顶点\\n      }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"邻接表节点结构：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n    {\\n      data: // 节点值\\n      firstArc: Obeject // 邻接链表的头指针\\n    }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"邻接表结构：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n      {\\n        vexs: Array // 节点数组\\n        kind: String // 字符串，表示图的类型，DG有向图，DN有向带权图，UDG无向图，UDN无向带权图\\n        e: Number // 边的数量\\n      }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"接口：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n      locateVex_M(v) // 查找v在vexs中的序号\\n      putVex_M(pos, v) // 对vexs[pos]赋值v\\n      getVex_M(pos) // 取vexs[pos]的值\\n      firstAdjVex_M(pos) // 求图中序号为pos的顶点的第一个邻接顶点的序号\\n      nextAdjVex_M(pos1, pos2) // pos2是pos1的邻接顶点，求图中pos1相对于pos2的下一个邻接顶点的位序\\n      addArc_M(pos1, pos2, info) // 在图中增加pos1到pos2的边，若传入info则为赋权\\n      removeArc_M(pos1, pos2) // 移除po1到pos2的边\\n      DFSTraverse_M(callback) // 深度优先遍历\\n      BFSTraverse_M(callback) // 广度优先遍历\\n      kruskal() // 克鲁斯卡尔算法，构造G的最小生成树,仅用于无向连通带权图\\n      dijkstra(pos) // 迪杰斯特拉算法，求从pos出发到其他顶点的路径\\n      toplogicalSort() // 拓补排序，求有向图的拓补排序，若失败返回false\\n      criticalPat // 关键路径,求有向带权图的关键路径\\n    \")])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/19.fd819944425320015098.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/.0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-183e0ec3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./ALGraph.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/.2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"1e32fafe\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.2.0.5@vue-style-loader!./~/.0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-183e0ec3\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Graph/ALGraph.vue\n// module id = 104\n// module chunks = 19","<template>\r\n  <div id=\"ALGraph\">\r\n    <h1>邻接数组</h1>\r\n    <div class=\"show-view\">\r\n      <h2>数据展示</h2>\r\n      <canvas width=\"500\" height=\"500\" id=\"canvas-mgraph\"></canvas>\r\n    </div>\r\n    <div class=\"show-data\">\r\n      <h2>结果：</h2>\r\n      {{result}}\r\n    </div>\r\n    <div class=\"operate-data\">\r\n      <h2>数据操作</h2>\r\n      <div class=\"operate-data-item\">\r\n        <input type=\"text\" v-model=\"vexsNumber\" name=\"vexsNumber\" placeholder=\"顶点数\">\r\n        <span class=\"oprate-data-aux\"><=顶点数量</span>\r\n        <input type=\"text\" v-model=\"graphKind\" name=\"graphKind\" placeholder=\"图的类型\">\r\n        <span class=\"oprate-data-aux\">DG有向图，DN有向带权图，UDG无向图，UDN无向带权图</span>\r\n        <button @click.stop.prevent=\"createALGraph\">生成图</button>\r\n      </div>\r\n      <div class=\"operate-data-item\">\r\n        <input type=\"text\" v-model=\"pos1\" name=\"pos1\" placeholder=\"位置1\">\r\n        <span class=\"oprate-data-aux\"><=位置1</span>\r\n        <input type=\"text\" v-model=\"pos2\" name=\"pos2\" placeholder=\"位置2\">\r\n        <span class=\"oprate-data-aux\"><=位置2</span>\r\n        <input type=\"text\" v-model=\"info\" name=\"info\" placeholder=\"权值\">\r\n        <span class=\"oprate-data-aux\"><=赋权</span>\r\n        <button @click.stop.prevent=\"addArc_M\">增加边</button>\r\n        <button @click.stop.prevent=\"removeArc_M\">删除边</button>\r\n      </div>\r\n      <div class=\"operate-data-item\">\r\n        <button @click.stop.prevent=\"DFSTraverse_M\">深度优先遍历</button>\r\n      </div>\r\n      <div class=\"operate-data-item\">\r\n        <button @click.stop.prevent=\"BFSTraverse_M\">广度优先遍历</button>\r\n      </div>\r\n      <div class=\"operate-data-item\">\r\n        <button @click.stop.prevent=\"kruskal\">克鲁斯卡尔算法</button>(无向连通带权图)\r\n      </div>\r\n      <div class=\"operate-data-item\">\r\n        <button @click.stop.prevent=\"toplogicalSort\">拓补排序</button>(有向图)\r\n      </div>\r\n      <div class=\"operate-data-item\">\r\n        <button @click.stop.prevent=\"criticalPath\">关键路径</button>(有向带权图)\r\n      </div>\r\n      <div class=\"operate-data-item\">\r\n        <input type=\"text\" v-model=\"pos3\" name=\"pos3\" placeholder=\"生成树的起点\">\r\n        <span class=\"oprate-data-aux\"><=起点（序号）</span>\r\n        <button @click.stop.prevent=\"dijkstra\">迪杰斯特拉算法</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"summary\">\r\n      <h2>总结：图——邻接数组</h2>\r\n      <h3>邻接指针:</h3>\r\n      <pre>\r\n        {\r\n          adjvex: Number // 邻接顶点在定点数组中的序号\r\n          info: Number // 权值\r\n          nextArc: Obeject // 指向下一个邻接顶点\r\n        }\r\n      </pre>\r\n      <h3>邻接表节点结构：</h3>\r\n      <pre>\r\n      {\r\n        data: // 节点值\r\n        firstArc: Obeject // 邻接链表的头指针\r\n      }\r\n      </pre>\r\n      <h3>邻接表结构：</h3>\r\n      <pre>\r\n        {\r\n          vexs: Array // 节点数组\r\n          kind: String // 字符串，表示图的类型，DG有向图，DN有向带权图，UDG无向图，UDN无向带权图\r\n          e: Number // 边的数量\r\n        }\r\n      </pre>\r\n      <h3>接口：</h3>\r\n      <pre>\r\n        locateVex_M(v) // 查找v在vexs中的序号\r\n        putVex_M(pos, v) // 对vexs[pos]赋值v\r\n        getVex_M(pos) // 取vexs[pos]的值\r\n        firstAdjVex_M(pos) // 求图中序号为pos的顶点的第一个邻接顶点的序号\r\n        nextAdjVex_M(pos1, pos2) // pos2是pos1的邻接顶点，求图中pos1相对于pos2的下一个邻接顶点的位序\r\n        addArc_M(pos1, pos2, info) // 在图中增加pos1到pos2的边，若传入info则为赋权\r\n        removeArc_M(pos1, pos2) // 移除po1到pos2的边\r\n        DFSTraverse_M(callback) // 深度优先遍历\r\n        BFSTraverse_M(callback) // 广度优先遍历\r\n        kruskal() // 克鲁斯卡尔算法，构造G的最小生成树,仅用于无向连通带权图\r\n        dijkstra(pos) // 迪杰斯特拉算法，求从pos出发到其他顶点的路径\r\n        toplogicalSort() // 拓补排序，求有向图的拓补排序，若失败返回false\r\n        criticalPat // 关键路径,求有向带权图的关键路径\r\n      </pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 邻接表\r\nfunction AdjVexNode (adjvex, info = true, nextArc = null) {\r\n  this.adjvex = adjvex // 邻接顶点在定点数组中的序号\r\n  this.info = info // 权值\r\n  this.nextArc = nextArc // 指向下一个邻接顶点\r\n}\r\nfunction VexNode (data, firstArc = null) {\r\n  this.data = data // 节点值\r\n  this.firstArc = firstArc // 邻接链表的头指针\r\n}\r\nfunction ALGraph (vexs = [], kind = 'DG') {\r\n  this.vexs = vexs // 顶点数组\r\n  this.kind = kind // 图的类型，DG有向图，DN有向带权图，UDG无向图，UDN无向带权图\r\n  this.e = 0 // 边数\r\n  for (let i = vexs.length - 1; i >= 0; i--) {\r\n    let arc = vexs[i].firstArc\r\n    while (arc !== null) {\r\n      this.e++\r\n      arc = arc.nextArc\r\n    }\r\n  }\r\n  this.e /= 2\r\n}\r\nALGraph.prototype.locateVex_M = function (data) { // 查找v在vexs中的序号\r\n  for (let i = this.vexs.length - 1; i >= 0; i--) {\r\n    if (this.vexs[i].data === data) {\r\n      return i\r\n    }\r\n  }\r\n  return false\r\n}\r\nALGraph.prototype.putVex_M = function (pos, data) { // 对vexs[pos]赋值v\r\n  if (pos >= this.vexs.length) {\r\n    return false\r\n  } else {\r\n    this.vexs[pos].data = data\r\n    return true\r\n  }\r\n}\r\nALGraph.prototype.getVex_M = function (pos) { // 取vexs\r\n  if (pos >= this.vexs.length) {\r\n    return false\r\n  } else {\r\n    return this.vexs[pos].data\r\n  }\r\n}\r\nALGraph.prototype.firstAdjVex_M = function (pos) { // 求图中序号为pos的顶点的邻接链表的指针\r\n  if (pos >= this.vexs.length) {\r\n    return false\r\n  } else {\r\n    return this.vexs[pos].firstArc\r\n  }\r\n}\r\nALGraph.prototype.addArc_M = function (pos1, pos2, info = true) { // 在图中增加pos1到pos2的边，若传入info则为赋权\r\n  if (pos1 >= this.vexs.length || pos2 >= this.vexs.length || pos1 === pos2) { // pos不合法\r\n    return false\r\n  }\r\n  if (this.kind !== 'DN' && this.kind !== 'UDN') {\r\n    info = true\r\n  } else {\r\n    info = parseInt(info)\r\n  }\r\n  let posAdj = this.firstAdjVex_M(pos1) // 邻接结点指针\r\n  if (posAdj === null) { // 若无邻接结点\r\n    this.vexs[pos1].firstArc = new AdjVexNode(pos2, info)\r\n  } else {\r\n    while (posAdj.nextArc !== null) { // 循环至邻接表尾\r\n      if (posAdj.adjvex === pos2) {\r\n        return false\r\n      }\r\n      posAdj = posAdj.nextArc\r\n    }\r\n    posAdj.nextArc = new AdjVexNode(pos2, info)\r\n  }\r\n  this.e++\r\n  if (this.kind === 'UDN' || this.kind === 'UDG') { // 无向图， 其他操作同上\r\n    posAdj = this.firstAdjVex_M(pos2)\r\n    if (posAdj === null) {\r\n      this.vexs[pos2].firstArc = new AdjVexNode(pos1, info)\r\n    } else {\r\n      while (posAdj.nextArc !== null) {\r\n        if (posAdj.adjvex === pos1) {\r\n          return false\r\n        }\r\n        posAdj = posAdj.nextArc\r\n      }\r\n      posAdj.nextArc = new AdjVexNode(pos1, info)\r\n    }\r\n  }\r\n  return true\r\n}\r\nALGraph.prototype.removeArc_M = function (pos1, pos2) { // 移除po1到pos2的边\r\n  if (pos1 >= this.vexs.length || pos2 >= this.vexs.length) {\r\n    return false\r\n  }\r\n  let posAdj = this.firstAdjVex_M(pos1) // 邻接结点指针\r\n  if (posAdj === null) {\r\n    return false\r\n  }\r\n  if (posAdj.adjvex === pos2) {\r\n    this.vexs[pos1].firstArc = posAdj.nextArc\r\n  } else {\r\n    while (posAdj.nextArc !== null && posAdj.nextArc.adjvex !== pos2) {\r\n      posAdj = posAdj.nextArc\r\n    }\r\n    if (posAdj.nextArc !== null && posAdj.nextArc.adjvex === pos2) {\r\n      posAdj.nextArc = posAdj.nextArc.nextArc\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  this.e--\r\n  if (this.kind === 'UDN' || this.kind === 'UDG') { // 无向图\r\n    posAdj = this.firstAdjVex_M(pos2) // 邻接结点指针\r\n    if (posAdj === null) {\r\n      return false\r\n    }\r\n    if (posAdj.adjvex === pos1) {\r\n      this.vexs[pos2].firstArc = posAdj.nextArc\r\n    } else {\r\n      while (posAdj.nextArc !== null && posAdj.nextArc.adjvex !== pos1) {\r\n        posAdj = posAdj.nextArc\r\n      }\r\n      if (posAdj.nextArc !== null && posAdj.nextArc.adjvex === pos1) {\r\n        posAdj.nextArc = posAdj.nextArc.nextArc\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\nALGraph.prototype.DFSTraverse_M = function (callback) { // 深度优先遍历\r\n  let tag = new Array(this.vexs.length)\r\n  for (let pos = 0; pos < this.vexs.length; pos++) {\r\n    if (tag[pos] === undefined) {\r\n      DFSTraverse.bind(this)(pos)\r\n    }\r\n  }\r\n  function DFSTraverse (pos) {\r\n    if (tag[pos]) {\r\n      return\r\n    }\r\n    callback(this.vexs[pos].data)\r\n    tag[pos] = true\r\n    let adjNode = this.firstAdjVex_M(pos)\r\n    while (adjNode !== null) {\r\n      DFSTraverse.bind(this)(adjNode.adjvex)\r\n      tag[adjNode.adjvex] = true\r\n      adjNode = adjNode.nextArc\r\n    }\r\n  }\r\n}\r\nALGraph.prototype.BFSTraverse_M = function (callback) { // 广度优先遍历\r\n  let tag = new Array(this.vexs.length)\r\n  let list = []\r\n  for (let pos = 0; pos < this.vexs.length; pos++) {\r\n    if (tag[pos] === undefined) {\r\n      list.push(pos)\r\n      tag[pos] = true\r\n    }\r\n    let i = list.shift()\r\n    while (i !== undefined) {\r\n      callback(this.vexs[i].data)\r\n      let adjNode = this.firstAdjVex_M(i)\r\n      while (adjNode !== null) {\r\n        if (tag[adjNode.adjvex] === undefined) {\r\n          list.push(adjNode.adjvex)\r\n          tag[adjNode.adjvex] = true\r\n        }\r\n        adjNode = adjNode.nextArc\r\n      }\r\n      i = list.shift()\r\n    }\r\n  }\r\n}\r\nALGraph.prototype.kruskal = function () { // 克鲁斯卡尔算法，构造G的最小生成树,仅用于无向连通带权图\r\n  // 并查集,用于判断图是否产生回路\r\n  function MFSetNode (key, parent = null) {\r\n    this.key = key\r\n    this.parent = parent\r\n  }\r\n  function MFSet () {\r\n    this.nodes = []\r\n    this.nodeNum = 0\r\n  }\r\n  MFSet.prototype.setRoot = function (key) { // 插入一个代表元\r\n    if (this.search(key)) {\r\n      return false\r\n    } else {\r\n      this.nodes.push(new MFSetNode(key))\r\n      this.nodeNum++\r\n      return true\r\n    }\r\n  }\r\n  MFSet.prototype.insert = function (key, pos) { // 插入一个以pos为父节点的子节点\r\n    if (this.search(key) || pos > this.nodeNum - 1) {\r\n      return false\r\n    } else {\r\n      this.nodes.push(new MFSetNode(key, pos))\r\n      this.nodeNum++\r\n      return true\r\n    }\r\n  }\r\n  MFSet.prototype.search = function (key) { // 搜索值为Key的节点\r\n    for (let i = this.nodeNum - 1; i >= 0; i--) {\r\n      if (this.nodes[i].key === key) {\r\n        return i\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  MFSet.prototype.find = function (pos) { // 找到pos所属的集合的代表元(路径压缩法)\r\n    if (pos > this.nodeNum) {\r\n      return false\r\n    } else {\r\n      let node = this.nodes[pos]\r\n      let nodePos = pos\r\n      let nodeList = []\r\n      while (node.parent !== null) {\r\n        nodeList.push(node)\r\n        nodePos = node.parent\r\n        node = this.nodes[nodePos]\r\n      }\r\n      if (nodeList.length > 0) {\r\n        for (let i = nodeList.length - 1; i >= 0; i--) {\r\n          nodeList[i].parent = nodePos\r\n        }\r\n      }\r\n      return node\r\n    }\r\n  }\r\n  MFSet.prototype.diff = function (pos1, pos2) { // 判断两个元素是否是同一集合\r\n    if (pos1 > this.nodeNum || pos2 > this.nodeNum || this.find(pos1) !== this.find(pos2)) { // 输入不合法或不属于同一集合\r\n      return false\r\n    } else { // 属于同一集合\r\n      return true\r\n    }\r\n  }\r\n  MFSet.prototype.union = function (pos1, pos2) { // 合并两个元素的集合\r\n    if (pos1 > this.nodeNum || pos2 > this.nodeNum || this.diff(pos1, pos2)) { // 输入不合法或本就属于同一集合\r\n      return false\r\n    } else {\r\n      this.find(pos1).parent = pos2\r\n    }\r\n  }\r\n  let newAlGraph = new ALGraph([], 'UDN')\r\n  let nodeMFSet = new MFSet()\r\n  let closedge = [] // 存储着边的信息\r\n  for (let i = this.vexs.length - 1, j = 0; i >= 0; i--) { // 遍历节点\r\n    newAlGraph.vexs.unshift(new VexNode(this.vexs[i].data)) // 初始化新图\r\n    nodeMFSet.setRoot(j++)\r\n    let arc = this.firstAdjVex_M(i) // 遍历该节点的所有邻接边\r\n    while (arc !== null) {\r\n      if (closedge.every((item) => { // 若边已在边数组中，返回false\r\n        if (item.i !== arc.adjvex || item.j !== i) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      })) {\r\n        closedge.push({\r\n          i: i,\r\n          j: arc.adjvex,\r\n          info: arc.info\r\n        })\r\n      }\r\n      arc = arc.nextArc\r\n    }\r\n  }\r\n  closedge.sort((a, b) => { return b.info - a.info }) // 降序排列\r\n  for (let i = this.e - 1; i >= 0; i--) {\r\n    console.log(nodeMFSet)\r\n    console.log('pos1: ' + closedge[i].i)\r\n    console.log('pos2: ' + closedge[i].j)\r\n    if (!nodeMFSet.diff(closedge[i].i, closedge[i].j)) {\r\n      console.log('找到可加入的边')\r\n      console.log(newAlGraph.addArc_M(closedge[i].i, closedge[i].j, closedge[i].info))\r\n      nodeMFSet.union(closedge[i].i, closedge[i].j)\r\n    }\r\n  }\r\n  return newAlGraph\r\n}\r\nALGraph.prototype.dijkstra = function (pos) { // 迪杰斯特拉算法，求从pos出发到其他顶点的路径\r\n  let dist = new Array(this.vexs.length) // 存放当前最短路径的信息\r\n  let tag = new Array(this.vexs.length) // 标记顶点是否加入\r\n  dist[pos] = {\r\n    lowcost: 0,\r\n    prev: null\r\n  }\r\n  let arc = this.vexs[pos].firstArc\r\n  while (arc !== null) { // 从源点引出的路径的信息\r\n    dist[arc.adjvex] = {\r\n      lowcost: arc.info,\r\n      prev: pos\r\n    }\r\n    arc = arc.nextArc\r\n  }\r\n  tag[pos] = true // 放入源点\r\n  for (let i = this.vexs.length - 2; i >= 0; i--) {\r\n    let min = null // 最小权值\r\n    let k = null // 顶点序号\r\n    for (let j = this.vexs.length - 1; j >= 0; j--) {\r\n      if (dist[j] !== undefined && tag[j] === undefined && (min === null || min > dist[j].lowcost)) {\r\n        min = dist[j].lowcost\r\n        k = j\r\n      }\r\n    }\r\n    if (k !== null) {\r\n      tag[k] = true // 放入最小的顶点\r\n      arc = this.vexs[k].firstArc\r\n      while (arc !== null) { // 从该顶点引出的路径的信息\r\n        let j = arc.adjvex\r\n        if (tag[j] === undefined && (dist[j] === undefined || (dist[k].lowcost + arc.info) < dist[j].lowcost)) {\r\n          dist[j] = {\r\n            lowcost: dist[k].lowcost + arc.info,\r\n            prev: k\r\n          }\r\n        }\r\n        arc = arc.nextArc\r\n      }\r\n    }\r\n  }\r\n  return dist\r\n}\r\nALGraph.prototype.toplogicalSort = function () { // 拓补排序，求有向图的拓补排序，若失败返回false\r\n  if (this.kind !== 'DG' && this.kind !== 'DN') {\r\n    return false\r\n  }\r\n  let toplogical = [] // 存放已排序好的部分\r\n  let nodeDegree = [] // 存放每个顶点的出度数\r\n  for (let i = this.vexs.length - 1; i >= 0; i--) {\r\n    nodeDegree.push(0) // 初始化入度数序列\r\n  }\r\n  for (let i = this.vexs.length - 1; i >= 0; i--) { // 记录所有点的入度\r\n    let arc = this.vexs[i].firstArc\r\n    while (arc !== null) {\r\n      nodeDegree[arc.adjvex]++\r\n      arc = arc.nextArc\r\n    }\r\n  }\r\n  for (let i = this.vexs.length - 1; i >= 0; i--) { // 依次写入排序\r\n    for (let j = this.vexs.length - 1; j >= 0; j--) { // 找出入度为0的点\r\n      if (nodeDegree[j] === 0) {\r\n        nodeDegree[j]--\r\n        toplogical.push({\r\n          data: this.vexs[j].data,\r\n          pos: j\r\n        })\r\n        let arc = this.vexs[j].firstArc\r\n        while (arc !== null) {\r\n          nodeDegree[arc.adjvex]--\r\n          arc = arc.nextArc\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n  if (toplogical.length !== this.vexs.length) { // 图有环或者有其他不合规范的情况\r\n    return false\r\n  } else {\r\n    return toplogical\r\n  }\r\n}\r\nALGraph.prototype.criticalPath = function () { // 关键路径\r\n  if (this.kind !== 'DG' && this.kind !== 'DN') {\r\n    return false\r\n  }\r\n  let toplogical = [] // 存放已排序好的部分\r\n  let nodeDegree = [] // 存放每个顶点的出度数\r\n  let ve = [] // 存放每个顶点的最早发生时间\r\n  let vl = [] // 存放每个顶点的最迟发生时间\r\n  let A = [] // 存放结果\r\n  for (let i = this.vexs.length - 1; i >= 0; i--) {\r\n    nodeDegree.push(0) // 初始化入度数序列\r\n    ve.push(0)\r\n  }\r\n  for (let i = this.vexs.length - 1; i >= 0; i--) { // 记录所有点的入度\r\n    let arc = this.vexs[i].firstArc\r\n    while (arc !== null) {\r\n      nodeDegree[arc.adjvex]++\r\n      arc = arc.nextArc\r\n    }\r\n  }\r\n  for (let i = this.vexs.length - 1; i >= 0; i--) { // 依次写入排序\r\n    for (let j = this.vexs.length - 1; j >= 0; j--) { // 找出入度为0的点\r\n      if (nodeDegree[j] === 0) {\r\n        nodeDegree[j]--\r\n        toplogical.push({\r\n          data: this.vexs[j].data,\r\n          pos: j\r\n        })\r\n        let arc = this.vexs[j].firstArc\r\n        while (arc !== null) {\r\n          ve[arc.adjvex] = (ve[j] + arc.info) > ve[arc.adjvex] ? (ve[j] + arc.info) : ve[arc.adjvex] // 更新ve\r\n          nodeDegree[arc.adjvex]--\r\n          arc = arc.nextArc\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n  for (let i = this.vexs.length - 1, j = ve[this.vexs.length - 1]; i >= 0; i--) { // 初始化vl序列\r\n    vl.push(j)\r\n  }\r\n  for (let i = this.vexs.length - 2; i >= 0; i--) {\r\n    let arc = this.vexs[i].firstArc\r\n    while (arc !== null) {\r\n      vl[i] = (ve[arc.adjvex] - arc.info) < vl[i] ? (ve[arc.adjvex] - arc.info) : vl[i] // 更新vl\r\n      arc = arc.nextArc\r\n    }\r\n  }\r\n  for (let i = this.vexs.length - 1; i >= 0; i--) { // 计算av, al\r\n    let ae // 活动的最早开始时间\r\n    let al // 活动的最迟开始时间\r\n    let arc = this.vexs[i].firstArc\r\n    while (arc !== null) {\r\n      ae = ve[i]\r\n      al = vl[arc.adjvex] - arc.info\r\n      if (ae === al) {\r\n        A.unshift({\r\n          v1: this.vexs[i].data,\r\n          v2: this.vexs[arc.adjvex].data,\r\n          info: arc.info,\r\n          ae: ae,\r\n          al: al,\r\n          le: al - ae\r\n        })\r\n      }\r\n      arc = arc.nextArc\r\n    }\r\n  }\r\n  if (toplogical.length !== this.vexs.length) { // 图有环或者有其他不合规范的情况\r\n    return false\r\n  } else {\r\n    return A\r\n  }\r\n}\r\nexport default {\r\n  data () {\r\n    return {\r\n      algraph: null,\r\n      vexsNumber: 0,\r\n      graphKind: 'UDN',\r\n      pos1: 0,\r\n      pos2: 0,\r\n      pos3: 0,\r\n      info: 0,\r\n      result: '无'\r\n    }\r\n  },\r\n  methods: {\r\n    paintALGraph () {\r\n      let canvas = document.getElementById('canvas-mgraph')\r\n      let cxt = canvas.getContext('2d')\r\n      canvas.width = canvas.width\r\n      canvas.height = canvas.height\r\n      cxt.scale(0.8, 0.8)\r\n      cxt.translate(canvas.width * 0.1, canvas.height * 0.1)\r\n      let data = this.algraph\r\n      let num = data.vexs.length\r\n      let angle = Math.PI * 2 / num\r\n      for (let i = 0; i < num; i++) {\r\n        cxt.moveTo(canvas.width / 2 * (1 + Math.sin(angle * i)), canvas.height / 2 * (1 + Math.cos(angle * i)))\r\n        cxt.fillStyle = 'red'\r\n        cxt.strokeStyle = 'red'\r\n        cxt.beginPath()\r\n        cxt.arc(canvas.width / 2 * (1 + Math.sin(angle * i)), canvas.height / 2 * (1 + Math.cos(angle * i)), canvas.width / 15, 0, Math.PI * 2, true)\r\n        cxt.closePath()\r\n        cxt.stroke()\r\n        cxt.font = '30px serif'\r\n        cxt.textAlign = 'center'\r\n        cxt.fillText(data.vexs[i].data, canvas.width / 2 * (1 + Math.sin(angle * i)), canvas.height / 2 * (1 + Math.cos(angle * i)))\r\n      }\r\n      function drawArrow (x1, y1, x2, y2, text) {\r\n        let arcAngle = Math.atan2(Math.round(y1 - y2), Math.round(x1 - x2))\r\n        if (arcAngle >= 0) {\r\n          cxt.translate(10, 10)\r\n        } else {\r\n          cxt.translate(-10, -10)\r\n        }\r\n        console.log('x1: ' + Math.round(x2 - x1) + ', y1: ' + Math.round(y2 - y1) + ', arcAngle: ' + arcAngle / Math.PI * 180 + '度')\r\n        let leftLineAngle = arcAngle + Math.PI / 18\r\n        let rightLineAngle = arcAngle - Math.PI / 18\r\n        cxt.beginPath()\r\n        cxt.arc(x2, y2, 30, leftLineAngle, rightLineAngle, true)\r\n        cxt.lineTo(x2, y2)\r\n        cxt.fill()\r\n        cxt.closePath()\r\n        cxt.moveTo(x1, y1)\r\n        cxt.lineTo(x2, y2)\r\n        cxt.stroke()\r\n        cxt.fillText(text, (x1 + x2) / 2, (y1 + y2) / 2)\r\n        if (arcAngle >= 0) {\r\n          cxt.translate(-10, -10)\r\n        } else {\r\n          cxt.translate(10, 10)\r\n        }\r\n      }\r\n      if (data.kind === 'DG' || data.kind === 'DN') { // 有向图\r\n        for (let i = 0; i < num; i++) {\r\n          for (let arc = data.vexs[i].firstArc; arc !== null; arc = arc.nextArc) {\r\n            let j = arc.adjvex\r\n            drawArrow(canvas.width / 2 * (1 + Math.sin(angle * i)), canvas.height / 2 * (1 + Math.cos(angle * i)), canvas.width / 2 * (1 + Math.sin(angle * j)), canvas.height / 2 * (1 + Math.cos(angle * j)), arc.info)\r\n          }\r\n        }\r\n      } else {\r\n        let tag = new Array(num)\r\n        for (let i = 0; i < num; i++) {\r\n          tag[i] = new Array(num)\r\n        }\r\n        for (let i = 0; i < num; i++) {\r\n          for (let arc = data.vexs[i].firstArc; arc !== null; arc = arc.nextArc) {\r\n            let j = arc.adjvex\r\n            if (tag[i][j] !== true) {\r\n              cxt.moveTo(canvas.width / 2 * (1 + Math.sin(angle * i)), canvas.height / 2 * (1 + Math.cos(angle * i)))\r\n              cxt.lineTo(canvas.width / 2 * (1 + Math.sin(angle * j)), canvas.height / 2 * (1 + Math.cos(angle * j)))\r\n              cxt.stroke()\r\n              cxt.fillText(arc.info, (canvas.width / 2 * (1 + Math.sin(angle * i)) + canvas.width / 2 * (1 + Math.sin(angle * j))) / 2, (canvas.height / 2 * (1 + Math.cos(angle * i)) + canvas.height / 2 * (1 + Math.cos(angle * j))) / 2)\r\n              tag[i][j] = true\r\n              tag[j][i] = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    createALGraph () {\r\n      let vexs = []\r\n      for (let i = this.vexsNumber - 1; i >= 0; i--) {\r\n        vexs.unshift(new VexNode(i))\r\n      }\r\n      this.algraph = new ALGraph(vexs, this.graphKind)\r\n      this.result = '无'\r\n      this.paintALGraph()\r\n    },\r\n    addArc_M () {\r\n      this.result = this.algraph.addArc_M(parseInt(this.pos1), parseInt(this.pos2), this.info)\r\n      this.paintALGraph()\r\n    },\r\n    removeArc_M () {\r\n      this.result = this.algraph.removeArc_M(parseInt(this.pos1), parseInt(this.pos2), this.info)\r\n      this.paintALGraph()\r\n    },\r\n    DFSTraverse_M () {\r\n      let result = ''\r\n      this.algraph.DFSTraverse_M((val) => { result += val + ',' })\r\n      this.result = result.slice(0, result.length - 1)\r\n    },\r\n    BFSTraverse_M () {\r\n      let result = ''\r\n      this.algraph.BFSTraverse_M((val) => { result += val + ',' })\r\n      this.result = result.slice(0, result.length - 1)\r\n    },\r\n    kruskal () {\r\n      this.algraph = this.algraph.kruskal()\r\n      this.paintALGraph()\r\n    },\r\n    dijkstra () { // 各点到该点的距离\r\n      let result = this.algraph.dijkstra(parseInt(this.pos3)).map((item) => { return item.lowcost })\r\n      this.result = result\r\n    },\r\n    toplogicalSort () {\r\n      this.result = this.algraph.toplogicalSort().map((item) => { return item.pos }).join(',')\r\n    },\r\n    criticalPath () {\r\n      this.result = this.algraph.criticalPath().map((item) => { return item.v1 + ' --> ' + item.v2 }).join(',')\r\n      console.log(this.algraph.criticalPath())\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#ALGraph {\r\n  font-size: 20px;\r\n}\r\n.show-view {\r\n  background-color: #adf;\r\n}\r\n.view-item {\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  margin: 5px;\r\n  line-height: 50px;\r\n  background-color: #fad;\r\n}\r\n.show-data {\r\n  background-color: #fda;\r\n}\r\n.operate-data {\r\n  background-color: #dfa;\r\n}\r\n.operate-data button {\r\n  font-size: 20px;\r\n  border: none;\r\n  background-color: white;\r\n  width: 140px;\r\n  height: 40px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n}\r\n.operate-data input {\r\n  width: 100px;\r\n  height: 37px;\r\n  padding: 0;\r\n  text-align: center;\r\n}\r\n#MGraph .oprate-data-aux {\r\n  font-size: 15px;\r\n}\r\n.summary {\r\n  background-color: #afe;\r\n}\r\n.summary pre {\r\n  text-align: left;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// ALGraph.vue?3eaef743","\n/* styles */\nrequire(\"!!../../../node_modules/.2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-183e0ec3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=styles&index=0!./ALGraph.vue\")\n\nvar Component = require(\"!../../../node_modules/.11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=script&index=0!./ALGraph.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/.11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-183e0ec3\\\"}!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=template&index=0!./ALGraph.vue\"),\n  /* scopeId */\n  \"data-v-183e0ec3\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Graph/ALGraph.vue\n// module id = 21\n// module chunks = 19","exports = module.exports = require(\"../../../node_modules/.0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"#ALGraph[data-v-183e0ec3]{font-size:20px}.show-view[data-v-183e0ec3]{background-color:#adf}.view-item[data-v-183e0ec3]{display:inline-block;width:50px;height:50px;margin:5px;line-height:50px;background-color:#fad}.show-data[data-v-183e0ec3]{background-color:#fda}.operate-data[data-v-183e0ec3]{background-color:#dfa}.operate-data button[data-v-183e0ec3]{font-size:20px;border:none;background-color:#fff;width:140px;height:40px;margin:10px;cursor:pointer}.operate-data input[data-v-183e0ec3]{width:100px;height:37px;padding:0;text-align:center}#MGraph .oprate-data-aux[data-v-183e0ec3]{font-size:15px}.summary[data-v-183e0ec3]{background-color:#afe}.summary pre[data-v-183e0ec3]{text-align:left}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/zxx/Desktop/七行考核/my-project/src/pages/Graph/ALGraph.vue\"],\"names\":[],\"mappings\":\"AACA,0BACE,cAAgB,CACjB,AACD,4BACE,qBAAuB,CACxB,AACD,4BACE,qBAAsB,AACtB,WAAY,AACZ,YAAa,AACb,WAAY,AACZ,iBAAkB,AAClB,qBAAuB,CACxB,AACD,4BACE,qBAAuB,CACxB,AACD,+BACE,qBAAuB,CACxB,AACD,sCACE,eAAgB,AAChB,YAAa,AACb,sBAAwB,AACxB,YAAa,AACb,YAAa,AACb,YAAa,AACb,cAAgB,CACjB,AACD,qCACE,YAAa,AACb,YAAa,AACb,UAAW,AACX,iBAAmB,CACpB,AACD,0CACE,cAAgB,CACjB,AACD,0BACE,qBAAuB,CACxB,AACD,8BACE,eAAiB,CAClB\",\"file\":\"ALGraph.vue\",\"sourcesContent\":[\"\\n#ALGraph[data-v-183e0ec3] {\\r\\n  font-size: 20px;\\n}\\n.show-view[data-v-183e0ec3] {\\r\\n  background-color: #adf;\\n}\\n.view-item[data-v-183e0ec3] {\\r\\n  display: inline-block;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  margin: 5px;\\r\\n  line-height: 50px;\\r\\n  background-color: #fad;\\n}\\n.show-data[data-v-183e0ec3] {\\r\\n  background-color: #fda;\\n}\\n.operate-data[data-v-183e0ec3] {\\r\\n  background-color: #dfa;\\n}\\n.operate-data button[data-v-183e0ec3] {\\r\\n  font-size: 20px;\\r\\n  border: none;\\r\\n  background-color: white;\\r\\n  width: 140px;\\r\\n  height: 40px;\\r\\n  margin: 10px;\\r\\n  cursor: pointer;\\n}\\n.operate-data input[data-v-183e0ec3] {\\r\\n  width: 100px;\\r\\n  height: 37px;\\r\\n  padding: 0;\\r\\n  text-align: center;\\n}\\n#MGraph .oprate-data-aux[data-v-183e0ec3] {\\r\\n  font-size: 15px;\\n}\\n.summary[data-v-183e0ec3] {\\r\\n  background-color: #afe;\\n}\\n.summary pre[data-v-183e0ec3] {\\r\\n  text-align: left;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-183e0ec3\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Graph/ALGraph.vue\n// module id = 52\n// module chunks = 19","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"ALGraph\"\n    }\n  }, [_c('h1', [_vm._v(\"邻接数组\")]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _c('div', {\n    staticClass: \"show-data\"\n  }, [_c('h2', [_vm._v(\"结果：\")]), _vm._v(\"\\n    \" + _vm._s(_vm.result) + \"\\n  \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data\"\n  }, [_c('h2', [_vm._v(\"数据操作\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.vexsNumber),\n      expression: \"vexsNumber\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"vexsNumber\",\n      \"placeholder\": \"顶点数\"\n    },\n    domProps: {\n      \"value\": (_vm.vexsNumber)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.vexsNumber = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=顶点数量\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.graphKind),\n      expression: \"graphKind\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"graphKind\",\n      \"placeholder\": \"图的类型\"\n    },\n    domProps: {\n      \"value\": (_vm.graphKind)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.graphKind = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"DG有向图，DN有向带权图，UDG无向图，UDN无向带权图\")]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.createALGraph($event)\n      }\n    }\n  }, [_vm._v(\"生成图\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.pos1),\n      expression: \"pos1\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"pos1\",\n      \"placeholder\": \"位置1\"\n    },\n    domProps: {\n      \"value\": (_vm.pos1)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.pos1 = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=位置1\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.pos2),\n      expression: \"pos2\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"pos2\",\n      \"placeholder\": \"位置2\"\n    },\n    domProps: {\n      \"value\": (_vm.pos2)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.pos2 = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=位置2\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.info),\n      expression: \"info\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"info\",\n      \"placeholder\": \"权值\"\n    },\n    domProps: {\n      \"value\": (_vm.info)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.info = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=赋权\")]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.addArc_M($event)\n      }\n    }\n  }, [_vm._v(\"增加边\")]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.removeArc_M($event)\n      }\n    }\n  }, [_vm._v(\"删除边\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.DFSTraverse_M($event)\n      }\n    }\n  }, [_vm._v(\"深度优先遍历\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.BFSTraverse_M($event)\n      }\n    }\n  }, [_vm._v(\"广度优先遍历\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.kruskal($event)\n      }\n    }\n  }, [_vm._v(\"克鲁斯卡尔算法\")]), _vm._v(\"(无向连通带权图)\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.toplogicalSort($event)\n      }\n    }\n  }, [_vm._v(\"拓补排序\")]), _vm._v(\"(有向图)\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.criticalPath($event)\n      }\n    }\n  }, [_vm._v(\"关键路径\")]), _vm._v(\"(有向带权图)\\n    \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"operate-data-item\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.pos3),\n      expression: \"pos3\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"pos3\",\n      \"placeholder\": \"生成树的起点\"\n    },\n    domProps: {\n      \"value\": (_vm.pos3)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.pos3 = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"oprate-data-aux\"\n  }, [_vm._v(\"<=起点（序号）\")]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n        _vm.dijkstra($event)\n      }\n    }\n  }, [_vm._v(\"迪杰斯特拉算法\")])])]), _vm._v(\" \"), _vm._m(1)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"show-view\"\n  }, [_c('h2', [_vm._v(\"数据展示\")]), _vm._v(\" \"), _c('canvas', {\n    attrs: {\n      \"width\": \"500\",\n      \"height\": \"500\",\n      \"id\": \"canvas-mgraph\"\n    }\n  })])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"summary\"\n  }, [_c('h2', [_vm._v(\"总结：图——邻接数组\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"邻接指针:\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n      {\\n        adjvex: Number // 邻接顶点在定点数组中的序号\\n        info: Number // 权值\\n        nextArc: Obeject // 指向下一个邻接顶点\\n      }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"邻接表节点结构：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n    {\\n      data: // 节点值\\n      firstArc: Obeject // 邻接链表的头指针\\n    }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"邻接表结构：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n      {\\n        vexs: Array // 节点数组\\n        kind: String // 字符串，表示图的类型，DG有向图，DN有向带权图，UDG无向图，UDN无向带权图\\n        e: Number // 边的数量\\n      }\\n    \")]), _vm._v(\" \"), _c('h3', [_vm._v(\"接口：\")]), _vm._v(\" \"), _c('pre', [_vm._v(\"\\n      locateVex_M(v) // 查找v在vexs中的序号\\n      putVex_M(pos, v) // 对vexs[pos]赋值v\\n      getVex_M(pos) // 取vexs[pos]的值\\n      firstAdjVex_M(pos) // 求图中序号为pos的顶点的第一个邻接顶点的序号\\n      nextAdjVex_M(pos1, pos2) // pos2是pos1的邻接顶点，求图中pos1相对于pos2的下一个邻接顶点的位序\\n      addArc_M(pos1, pos2, info) // 在图中增加pos1到pos2的边，若传入info则为赋权\\n      removeArc_M(pos1, pos2) // 移除po1到pos2的边\\n      DFSTraverse_M(callback) // 深度优先遍历\\n      BFSTraverse_M(callback) // 广度优先遍历\\n      kruskal() // 克鲁斯卡尔算法，构造G的最小生成树,仅用于无向连通带权图\\n      dijkstra(pos) // 迪杰斯特拉算法，求从pos出发到其他顶点的路径\\n      toplogicalSort() // 拓补排序，求有向图的拓补排序，若失败返回false\\n      criticalPat // 关键路径,求有向带权图的关键路径\\n    \")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-183e0ec3\"}!./~/.11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/pages/Graph/ALGraph.vue\n// module id = 79\n// module chunks = 19"],"sourceRoot":""}